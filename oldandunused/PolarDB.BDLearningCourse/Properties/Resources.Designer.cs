//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Polar.LearningCourse.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Polar.LearningCourse.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Polar.Common;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace Polar.LearningCourse
        ///{
        ///    public class Task01 : ISample
        ///    {
        ///        public ICollection&lt;IField&gt; Fields
        ///        {
        ///            get
        ///            {
        ///                return new List&lt;IField&gt;() {
        ///                    new NumericField(&quot;Number of elements&quot;, &quot;nelements&quot;) { DefaultValue = 100_000_000 },
        ///                    new BooleanField( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Task01 {
            get {
                return ResourceManager.GetString("Task01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Task01_HelloBigData: Файл, как основа работы с хранимыми данными. Моя первая база данных на C#
        ///
        ///Традиционным началом для изучения программных технологий, является написание простейшего приложения-приветствия. Мы пойдем дальше, попробуем «прикоснуться» к проблематике больших данных через написание достаточно простой программы.  Одновременно, будем осваивать использование работу с файлами и стримами (streams). В конечном счете, именно файл почти всегда является носителем сохраняемых данных вне зависимост [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Task01_desc {
            get {
                return ResourceManager.GetString("Task01_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Polar.Cells;
        ///using Polar.Common;
        ///using Polar.DB;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace Polar.LearningCourse
        ///{
        ///    public class Task03 : ISample
        ///    {
        ///        public ICollection&lt;IField&gt; Fields
        ///        {
        ///            get
        ///            {
        ///                return new List&lt;IField&gt;();
        ///            }
        ///        }
        ///        private string dbpath;
        ///        public void Clear()
        ///        {
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Task03 {
            get {
                return ResourceManager.GetString("Task03", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ## Task03_Polar.DB: Начинаем осваивать Поляр
        ///В практической части данного курса будет использоваться библиотека работы с данными PolarDB или просто Поляр. Эта библиотека построена на небольшом количестве идей, принципов и решений, позволяет компактно и эффективно реализовывать специализированные построения.
        ///
        ///Поляр построен на некотором представлении о типизации [], которое созвучно ряду других. Суть этого построения в том, что все рассматриваемые структурные объекты обладают внешним относительно себя тип [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Task03_desc {
            get {
                return ResourceManager.GetString("Task03_desc", resourceCulture);
            }
        }
    }
}
